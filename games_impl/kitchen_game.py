import random

from domain.abstract_game import AbstractGame
from domain.person import Person
from domain.state_condition import StateCondition


class KitchenGame(AbstractGame):

    def create_person(self):
        person = Person('–°–æ—Ñ–∏—è', '–ñ–µ–Ω—Å–∫–∏–π', {"–°–æ—Ñ–∏—è"}, 100, '–£—Ç–æ–ª–∏—Ç—å –≥–æ–ª–æ–¥', '–ö–æ–º–Ω–∞—Ç–∞')
        # –í —Ü–∏–∫–ª–µ –æ—Ç 1 –¥–æ 100 —Å —à–∞–≥–æ–º 10 –≥–µ–Ω–µ—Ä–∏–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
        for i in range(0, 100, 10):
            random_number = random.randint(0, 100)
            # –ï—Å–ª–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 50
            if i >= random_number:
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
                person.inventory.add(f'random{i}')
        return person

    def get_all_conditions(self):
        return game_conditions


game_conditions = [
    # –ö–æ–º–Ω–∞—Ç–∞
    StateCondition("shoesOn", "–ù–∞–¥–µ—Ç—å —Ç–∞–ø–æ—á–∫–∏", "–ö–æ–º–Ω–∞—Ç–∞", {}, {}, {"shoes"},
                   None, {"shoes"}, {}, "–í —Ç–∞–ø–æ—á–∫–∞—Ö —Ç–µ–ø–ª–æ –∏ —É—é—Ç–Ω–æ!\n–ú–æ–∂–Ω–æ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ"),

    StateCondition("shoesOff", "–°–Ω—è—Ç—å —Ç–∞–ø–æ—á–∫–∏", "–ö–æ–º–Ω–∞—Ç–∞", {}, {"shoes"}, {"corridorLight"},
                   None, {}, {"shoes"}, "–¢–∞–ø–æ—á–∫–∏ –¥–æ–ª–æ–π!"),

    StateCondition("corridor->room", "–ó–∞–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É", "–ö–æ—Ä–∏–¥–æ—Ä", {}, {}, {},
                   "–ö–æ–º–Ω–∞—Ç–∞", {}, {}, "–¢–µ–ø–µ—Ä—å —è –≤ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç–µ"),

    StateCondition("room->corridorLightOn", "–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä", "–ö–æ–º–Ω–∞—Ç–∞", {}, {}, {"corridorLight"},
                   "–ö–æ—Ä–∏–¥–æ—Ä", {}, {}, "–¢–µ–ø–µ—Ä—å —è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –∏ —Ç—É—Ç –æ—á–µ–Ω—å —Ç–µ–º–Ω–æ üëÄ"),

    StateCondition("room->corridorLightOff", "–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä", "–ö–æ–º–Ω–∞—Ç–∞", {}, {"corridorLight"}, {},
                   "–ö–æ—Ä–∏–¥–æ—Ä", {}, {}, "–¢–µ–ø–µ—Ä—å —è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –∏ —Ç—É—Ç –∫—Ç–æ-—Ç–æ –∑–∞–±—ã–ª –≤—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç üí°"),

    # –ª–µ—á—å –Ω–∞ –∫—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–∑—è–ª–∏ —Å—ã—Ä
    StateCondition("sleep", "–ü–æ—Å–ø–∞—Ç—å –Ω–∞ –∫—Ä–æ–≤–∞—Ç–∏", "–ö–æ–º–Ω–∞—Ç–∞", {}, {"cheese"}, {"shoes"},
                   "–°–Ω–æ–≤–∏–¥–µ–Ω–∏—è", {}, {}, "–¢–µ–ø–µ—Ä—å —è —Å—ã—Ç—ã–π –∏ –º–æ–∂–Ω–æ –ø–æ—Å–ø–∞—Ç—å! üò¥"),

    # –õ–µ–∂–∞—Ç—å –∏ –≤–∏–¥–µ—Ç—å —Å–Ω—ã
    StateCondition("sleep1", "–í–∏–¥–µ—Ç—å —Å–Ω—ã", "–°–Ω–æ–≤–∏–¥–µ–Ω–∏—è", {"cheese"}, {}, {"meat"},
                   None, {}, {}, "–°–Ω–∏—Ç—Å—è –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π —Å–æ–Ω! üòá"),

    StateCondition("sleep2", "–í–∏–¥–µ—Ç—å —Å–Ω—ã", "–°–Ω–æ–≤–∏–¥–µ–Ω–∏—è", {"meat"}, {}, {},
                   None, {}, {}, "–°–Ω–∏—Ç—Å—è –∫–æ—à–º–∞—Ä! üëπüëªüòì"),

    StateCondition("wakeUp", "–ü—Ä–æ—Å–Ω—É—Ç—å—Å—è", "–°–Ω–æ–≤–∏–¥–µ–Ω–∏—è", {}, {}, {},
                   "–ö–æ–º–Ω–∞—Ç–∞", {}, {}, "–ü—Ä–æ—Å–Ω—É–ª—Å—è –≤ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç–µ"),

    # –ö–æ—Ä–∏–¥–æ—Ä
    StateCondition("corridorLightOn", "–í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤ –∫–æ—Ä–∏–¥–æ—Ä–µüí°", "–ö–æ—Ä–∏–¥–æ—Ä", {}, {}, {"corridorLight"},
                   None, {"corridorLight"}, {}, "–¢–µ–ø–µ—Ä—å —Å–≤–µ—Ç–ª–µ–µ üí°. –ú–æ–∂–Ω–æ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ."),

    StateCondition("corridorLightOff", "–í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ", "–ö–æ—Ä–∏–¥–æ—Ä", {}, {"corridorLight"}, {},
                   None, {}, {"corridorLight"}, "–û–ø—è—Ç—å —Ç–µ–º–Ω–æ üëÄ"),

    StateCondition("kitchenLightOn", "–í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –Ω–∞ –∫—É—Ö–Ω–µ üí°", "–ö–æ—Ä–∏–¥–æ—Ä", {}, {}, {"kitchenLight"},
                   None, {"kitchenLight"}, {}, "–¢–µ–ø–µ—Ä—å –Ω–∞ –∫—É—Ö–Ω–µ —Å–≤–µ—Ç–ª–æ üí°"),

    StateCondition("kitchenLightOff", "–í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –Ω–∞ –∫—É—Ö–Ω–µ", "–ö–æ—Ä–∏–¥–æ—Ä", {}, {"kitchenLight"}, {},
                   None, {}, {"kitchenLight"}, "–ù–∞ –∫—É—Ö–Ω–µ —Ç–µ–º–Ω–æ"),

    StateCondition("corridor->kitchenLightOff", "–ó–∞–π—Ç–∏ –Ω–∞ –∫—É—Ö–Ω—é", "–ö–æ—Ä–∏–¥–æ—Ä", {}, {}, {"kitchenLight"},
                   "–ö—É—Ö–Ω—è", {}, {}, "–ö—É—Ö–Ω—è! –¢—É—Ç —Ç–µ–º–Ω–æ. –ì–¥–µ –∂–µ —ç—Ç–æ—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫?!"),

    StateCondition("corridor->kitchenLightOn", "–ó–∞–π—Ç–∏ –Ω–∞ –∫—É—Ö–Ω—é", "–ö–æ—Ä–∏–¥–æ—Ä", {}, {"kitchenLight"}, {},
                   "–ö—É—Ö–Ω—è", {}, {}, "–ö—É—Ö–Ω—è! –í–æ—Ç –∏ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫! –ú–æ–∂–Ω–æ –∏ –ø–µ—Ä–µ–∫—É—Å–∏—Ç—å ü§§"),

    # –ö—É—Ö–Ω—è

    # –æ—Ç–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫
    StateCondition("openFridge", "–û—Ç–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫", "–ö—É—Ö–Ω—è", {}, {"kitchenLight"}, {"fridge"},
                   None, {"fridge"}, {}, "–ü–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Ç—É—Ç –µ—Å—Ç—å –≤–∫—É—Å–Ω–µ–Ω—å–∫–æ–≥–æ?! ü§§"),

    # –í–∑—è—Ç—å –∏–∑ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ —Å—ã—Ä
    StateCondition("takeCheese", "–°—ã—Ä! üßÄ", "–ö—É—Ö–Ω—è", {}, {"fridge"}, {"cheese"},
                   None, {"cheese"}, {}, "–í–∑—è–ª–∏ —Å—ã—Ä üßÄ"),
    # –∫—É—Å–æ–∫ –º—è—Å–∞
    StateCondition("takeMeat", "–ö—É—Å–æ–∫ –º—è—Å–∞! üçñ", "–ö—É—Ö–Ω—è", {}, {"fridge"}, {"meat"},
                   None, {"meat"}, {}, "–í–∑—è–ª–∏ –∫—É—Å–æ–∫ –º—è—Å–∞! üçñ"),

    # –ü–∏—Ä–æ–∂–Ω–æ–µ
    StateCondition("takeCake", "–ü–∏—Ä–æ–∂–Ω–æ–µ! üç™", "–ö—É—Ö–Ω—è", {}, {"fridge"}, {"cake"},
                   None, {"cake"}, {}, "–í–∑—è–ª–∏ –ø–∏—Ä–æ–∂–Ω–æ–µ! üç™"),

    # –∑–∞–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫
    StateCondition("closeFridge", "–ó–∞–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫", "–ö—É—Ö–Ω—è", {}, {"fridge"}, {},
                   None, {}, {"fridge"}, "–ò—Ç–∞–∫, —è –ø–æ—Å—Ä–µ–¥–∏ –∫—É—Ö–Ω–∏. –ß—Ç–æ –¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ?"),

    # –∏–∑ –∫—É—Ö–Ω–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä
    StateCondition("kitchen->corridorLightOn", "–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä", "–ö—É—Ö–Ω—è", {}, {}, {"corridorLight"},
                   "–ö–æ—Ä–∏–¥–æ—Ä", {}, {}, "–¢–µ–ø–µ—Ä—å —è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –∏ —Ç—É—Ç –æ—á–µ–Ω—å —Ç–µ–º–Ω–æ üëÄ"),

    StateCondition("kitchen->corridorLightOff", "–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä", "–ö—É—Ö–Ω—è", {}, {"corridorLight"}, {},
                   "–ö–æ—Ä–∏–¥–æ—Ä", {}, {}, "–¢–µ–ø–µ—Ä—å —è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –∏ —Ç—É—Ç —Å–≤–µ—Ç–ª–æ üí°"),
]
