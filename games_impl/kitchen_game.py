import random

from domain.abstract_game import AbstractGame
from domain.person import Person
from domain.state_condition import StateCondition


class KitchenGame(AbstractGame):

    def create_person(self) -> Person:
        person = Person('–°–æ—Ñ–∏—è', '–ñ–µ–Ω—Å–∫–∏–π', {'–°–æ—Ñ–∏—è'}, 100, '–£—Ç–æ–ª–∏—Ç—å –≥–æ–ª–æ–¥', '–ö–æ–º–Ω–∞—Ç–∞')
        if random.randint(0, 100) <= 20:
            # –° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 20% –≤–∫–ª—é—á–∏–º —Å–≤–µ—Ç –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ
            person.inventory.add('corridorLight')

        if random.randint(0, 100) <= 50:
            # –° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 50% –æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ª–∏–±–æ –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ, –ª–∏–±–æ –Ω–∞ –∫—É—Ö–Ω–µ
            person.inventory.add('pictureInCorridor')
        else:
            person.inventory.add('pictureInKitchen')

        # –°–ª—É—á–∞–π–Ω—ã–π —à–∏—Ñ—Ä –∏–∑ 4 –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Ü–∏—Ñ—Ä
        digits = random.sample(range(10), 4)
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ —Ü–∏—Ñ—Ä –≤ —Å—Ç—Ä–æ–∫—É
        code = ''.join(map(str, digits))
        person.inventory.add('code=' + code)
        print(f"–®–∏—Ñ—Ä: {code}")
        return person

    def get_all_conditions(self) -> list[StateCondition]:
        return game_conditions

    def check_game_end(self, person: Person) -> str:
        if ('end' in person.inventory) or (person.health <= 0):
            res = ''
            if ('corridorLight' in person.inventory) or ('kitchenLight' in person.inventory):
                res += '–¢—ã –∑–∞–±—ã–ª –≤—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç!\n\n'
            if 'fridge' in person.inventory:
                res += ('–¢—ã –∑–∞–±—ã–ª –∑–∞–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫!\n'
                        '–í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø—Ä–æ–ø–∞–ª–∏!\n'
                        '–¢–µ–ø–µ—Ä—å –Ω–∞–¥–æ —á—Ç–æ-—Ç–æ –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å, —á—Ç–æ –±—É–¥–µ—Ç –µ—Å—Ç—å –≤—Å—è —Å–µ–º—å—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫!\n\n')
            res += '–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞ üèÜ'
            return res
        pass


game_conditions = [
    # –ö–æ–º–Ω–∞—Ç–∞
    StateCondition(1, 'shoesOn', '–ù–∞–¥–µ—Ç—å —Ç–∞–ø–æ—á–∫–∏ ü©∞', '–ö–æ–º–Ω–∞—Ç–∞', set(), set(), {'shoes'},
                   '', {'shoes'}, set(), '–í —Ç–∞–ø–æ—á–∫–∞—Ö —Ç–µ–ø–ª–æ –∏ —É—é—Ç–Ω–æ!\n–ú–æ–∂–Ω–æ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ'),

    StateCondition(1, 'shoesOff', '–°–Ω—è—Ç—å —Ç–∞–ø–æ—á–∫–∏ ü©∞', '–ö–æ–º–Ω–∞—Ç–∞', set(), {'shoes'}, set(),
                   '', set(), {'shoes'}, '–¢–∞–ø–æ—á–∫–∏ –¥–æ–ª–æ–π!'),

    StateCondition(10, 'corridor->room', '–ó–∞–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É üö™', '–ö–æ—Ä–∏–¥–æ—Ä', set(), set(), set(),
                   '–ö–æ–º–Ω–∞—Ç–∞', set(), set(), '–¢–µ–ø–µ—Ä—å —è –≤ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç–µ'),

    StateCondition(10, 'room->corridorLightOn', '–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä üö™', '–ö–æ–º–Ω–∞—Ç–∞', set(), set(), {'corridorLight'},
                   '–ö–æ—Ä–∏–¥–æ—Ä', set(), set(), '–¢–µ–ø–µ—Ä—å —è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –∏ —Ç—É—Ç –æ—á–µ–Ω—å —Ç–µ–º–Ω–æ üëÄ'),

    StateCondition(10, 'room->corridorLightOff', '–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä üö™', '–ö–æ–º–Ω–∞—Ç–∞', set(), {'corridorLight'}, set(),
                   '–ö–æ—Ä–∏–¥–æ—Ä', set(), set(), '–¢–µ–ø–µ—Ä—å —è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –∏ —Ç—É—Ç –∫—Ç–æ-—Ç–æ –∑–∞–±—ã–ª –≤—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç üí°'),

    # –ª–µ—á—å –Ω–∞ –∫—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –≤–∑—è–ª–∏ —Å—ã—Ä
    StateCondition(3, 'sleep', '–ü–æ—Å–ø–∞—Ç—å –Ω–∞ –∫—Ä–æ–≤–∞—Ç–∏ üõå', '–ö–æ–º–Ω–∞—Ç–∞', {'cheese', 'meat', 'cake'}, set(), {'shoes'},
                   '–°–Ω–æ–≤–∏–¥–µ–Ω–∏—è', set(), set(), '–¢–µ–ø–µ—Ä—å —è —Å—ã—Ç—ã–π –∏ –º–æ–∂–Ω–æ –ø–æ—Å–ø–∞—Ç—å! üò¥'),

    # –õ–µ–∂–∞—Ç—å –∏ –≤–∏–¥–µ—Ç—å —Å–Ω—ã
    StateCondition(2, 'sleep1', '–í–∏–¥–µ—Ç—å —Å–Ω—ã üí§', '–°–Ω–æ–≤–∏–¥–µ–Ω–∏—è', {'cheese', 'picture'}, set(), {'meat'},
                   '', set(), set(), '–°–Ω–∏—Ç—Å—è –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π —Å–æ–Ω! üòá'),

    StateCondition(2, 'sleep2', '–í–∏–¥–µ—Ç—å —Å–Ω—ã üí§', '–°–Ω–æ–≤–∏–¥–µ–Ω–∏—è', {'meat', 'picture'}, {'meat'}, set(),
                   '', set(), set(), '–°–Ω–∏—Ç—Å—è –∫–æ—à–º–∞—Ä! üëπüëªüòì'),

    StateCondition(10, 'wakeUp', '–ü—Ä–æ—Å–Ω—É—Ç—å—Å—è ‚è∞', '–°–Ω–æ–≤–∏–¥–µ–Ω–∏—è', set(), set(), set(),
                   '–ö–æ–º–Ω–∞—Ç–∞', {'end'}, set(), '–ü—Ä–æ—Å–Ω—É–ª—Å—è –≤ —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç–µ ‚òÄÔ∏è'),

    # –ö–æ—Ä–∏–¥–æ—Ä
    StateCondition(5, 'corridorLightOn', '–í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤ –∫–æ—Ä–∏–¥–æ—Ä–µüí°', '–ö–æ—Ä–∏–¥–æ—Ä', set(), set(), {'corridorLight'},
                   '', {'corridorLight'}, set(), '–¢–µ–ø–µ—Ä—å —Å–≤–µ—Ç–ª–µ–µ üí°. –ú–æ–∂–Ω–æ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ.'),

    StateCondition(5, 'corridorLightOff', '–í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ', '–ö–æ—Ä–∏–¥–æ—Ä', set(), {'corridorLight'}, set(),
                   '', set(), {'corridorLight'}, '–û–ø—è—Ç—å —Ç–µ–º–Ω–æ üëÄ'),

    StateCondition(3, 'corridorLookAround', '–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è üëÄ', '–ö–æ—Ä–∏–¥–æ—Ä', set(), {'corridorLight'},
                   {'corridorLookAround'}, '', {'corridorLookAround'}, set(), '–ü–æ–∫–∞ —Å–≤–µ—Ç–ª–æ - –æ—Å–º–æ—Ç—Ä–µ–ª–∏—Å—å –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ'),

    StateCondition(3, 'corridorFindPicture', '–ü–æ–¥–Ω—è—Ç—å –ª–∏—Å—Ç–æ—á–µ–∫ üñºÔ∏è', '–ö–æ—Ä–∏–¥–æ—Ä', set(),
                   {'pictureInCorridor', 'corridorLight', 'corridorLookAround'},
                   {'picture'}, '', {'picture'}, set(), '–ù–∞—à–ª–∏ –ø—Ä–∏–∫–æ–ª—å–Ω—É—é —Ñ–æ—Ç–∫—É', '1.png'),

    StateCondition(5, 'kitchenLightOn', '–í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –Ω–∞ –∫—É—Ö–Ω–µ üí°', '–ö–æ—Ä–∏–¥–æ—Ä', set(), set(), {'kitchenLight'},
                   '', {'kitchenLight'}, set(), '–¢–µ–ø–µ—Ä—å –Ω–∞ –∫—É—Ö–Ω–µ —Å–≤–µ—Ç–ª–æ üí°'),

    StateCondition(5, 'kitchenLightOff', '–í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –Ω–∞ –∫—É—Ö–Ω–µ', '–ö–æ—Ä–∏–¥–æ—Ä', set(), {'kitchenLight'}, set(),
                   '', set(), {'kitchenLight'}, '–ù–∞ –∫—É—Ö–Ω–µ —Ç–µ–º–Ω–æ'),

    StateCondition(10, 'corridor->kitchenLightOff', '–ó–∞–π—Ç–∏ –Ω–∞ –∫—É—Ö–Ω—é üö™', '–ö–æ—Ä–∏–¥–æ—Ä', set(), set(), {'kitchenLight'},
                   '–ö—É—Ö–Ω—è', set(), set(), '–ö—É—Ö–Ω—è! –¢—É—Ç —Ç–µ–º–Ω–æ. –ì–¥–µ –∂–µ —ç—Ç–æ—Ç —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫?!'),

    StateCondition(10, 'corridor->kitchenLightOn', '–ó–∞–π—Ç–∏ –Ω–∞ –∫—É—Ö–Ω—é üö™', '–ö–æ—Ä–∏–¥–æ—Ä', set(), {'kitchenLight'}, set(),
                   '–ö—É—Ö–Ω—è', set(), set(), '–ö—É—Ö–Ω—è! –í–æ—Ç –∏ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫! –ú–æ–∂–Ω–æ –∏ –ø–µ—Ä–µ–∫—É—Å–∏—Ç—å ü§§'),

    # –ö—É—Ö–Ω—è

    # –æ—Ç–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫
    StateCondition(3, 'openFridge', '–û—Ç–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ ‚ùÑÔ∏è', '–ö—É—Ö–Ω—è', set(), {'kitchenLight'}, {'fridge'},
                   '', {'fridge'}, set(), '–ü–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Ç—É—Ç –µ—Å—Ç—å –≤–∫—É—Å–Ω–µ–Ω—å–∫–æ–≥–æ?! ü§§'),
    # –í–∑—è—Ç—å –∏–∑ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ —Å—ã—Ä
    StateCondition(1, 'takeCheese', '–°—ã—Ä! üßÄ', '–ö—É—Ö–Ω—è', set(), {'fridge'}, {'cheese'},
                   '', {'cheese'}, set(), '–í–∑—è–ª–∏ —Å—ã—Ä üßÄ'),
    # –∫—É—Å–æ–∫ –º—è—Å–∞
    StateCondition(1, 'takeMeat', '–ö—É—Å–æ–∫ –º—è—Å–∞! üçñ', '–ö—É—Ö–Ω—è', set(), {'fridge'}, {'meat'},
                   '', {'meat'}, set(), '–í–∑—è–ª–∏ –∫—É—Å–æ–∫ –º—è—Å–∞! üçñ'),
    # –ü–∏—Ä–æ–∂–Ω–æ–µ
    StateCondition(1, 'takeCake', '–ü–∏—Ä–æ–∂–Ω–æ–µ! üç™', '–ö—É—Ö–Ω—è', set(), {'fridge'}, {'cake'},
                   '', {'cake'}, set(), '–í–∑—è–ª–∏ –ø–∏—Ä–æ–∂–Ω–æ–µ! üç™'),
    # –∑–∞–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫
    StateCondition(3, 'closeFridge', '–ó–∞–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ ‚ùÑÔ∏è', '–ö—É—Ö–Ω—è', set(), {'fridge'}, set(),
                   '', set(), {'fridge'}, '–ò—Ç–∞–∫, —è –ø–æ—Å—Ä–µ–¥–∏ –∫—É—Ö–Ω–∏. –ß—Ç–æ –¥–µ–ª–∞–µ–º –¥–∞–ª—å—à–µ?'),

    StateCondition(3, 'kitchenLookAround', '–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è üëÄ', '–ö—É—Ö–Ω—è', set(), {'kitchenLight'},
                   {'kitchenLookAround'}, '', {'kitchenLookAround'}, set(), '–ü–æ–∫–∞ —Å–≤–µ—Ç–ª–æ - –æ—Å–º–æ—Ç—Ä–µ–ª–∏—Å—å –Ω–∞ –∫—É—Ö–Ω–µ'),

    StateCondition(3, 'kitchenFindPicture', '–ü–æ–¥–Ω—è—Ç—å –ª–∏—Å—Ç–æ—á–µ–∫ üñºÔ∏è', '–ö—É—Ö–Ω—è', set(),
                   {'pictureInKitchen', 'kitchenLight', 'kitchenLookAround'}, {'picture'}, '', {'picture'}, set(),
                   '–ù–∞—à–ª–∏ –ø—Ä–∏–∫–æ–ª—å–Ω—É—é —Ñ–æ—Ç–∫—É', '1.png'),

    # –∏–∑ –∫—É—Ö–Ω–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä
    StateCondition(10, 'kitchen->corridorLightOn', '–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä üö™', '–ö—É—Ö–Ω—è', set(), set(), {'corridorLight'},
                   '–ö–æ—Ä–∏–¥–æ—Ä', set(), set(), '–¢–µ–ø–µ—Ä—å —è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –∏ —Ç—É—Ç –æ—á–µ–Ω—å —Ç–µ–º–Ω–æ üëÄ'),

    StateCondition(10, 'kitchen->corridorLightOff', '–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä üö™', '–ö—É—Ö–Ω—è', set(), {'corridorLight'}, set(),
                   '–ö–æ—Ä–∏–¥–æ—Ä', set(), set(), '–¢–µ–ø–µ—Ä—å —è –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –∏ —Ç—É—Ç —Å–≤–µ—Ç–ª–æ üí°'),
]
